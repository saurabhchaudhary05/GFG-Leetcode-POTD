Day 223 of solving #GFG potd and #leetcode

Problem 1: Pair Sum in BST üå≥üî¢

Problem Description:

Given a Binary Search Tree (BST) and a target sum, determine if any two nodes in the BST sum up to the target value.



Approach:

1Ô∏è‚É£ Using Inorder Traversal + Two-Pointer Technique:

 ‚Ä¢ Perform an inorder traversal to get a sorted array representation of the BST.

 ‚Ä¢ Use the two-pointer approach (start from both ends of the array) to check if any pair sums to the target.

2Ô∏è‚É£ Using HashSet (Optimized for Unsorted BSTs):

 ‚Ä¢ Traverse the BST while storing visited nodes in a HashSet.

 ‚Ä¢ For each node x, check if target - x is in the set.

 ‚Ä¢ If found, return True; otherwise, continue traversal.



Complexity:

‚Ä¢ Time Complexity: O(N) (for both approaches)

 ‚Ä¢ Space Complexity: O(N) (for storing elements in an array or set)



Problem 2: Minimum Operations to Exceed Threshold Value II üî¢‚ö°

Problem Description:

Given a 0-indexed integer array nums and an integer k, perform operations to ensure all elements are ‚â• k.

 Operation:

Pick the two smallest elements (x, y).

Remove them from the array.

Add min(x, y) * 2 + max(x, y) back into the array.

Repeat until all elements ‚â• k.

 Return the minimum number of operations required.



Approach:

1Ô∏è‚É£ Using Min-Heap (Priority Queue) for Efficiency:

 ‚Ä¢ Use a Min-Heap (priority queue) to efficiently get the two smallest elements.

 ‚Ä¢ Apply the operation and push the new value back into the heap.

 ‚Ä¢ Repeat until the smallest element in the heap is ‚â• k.



Complexity:

‚Ä¢ Time Complexity: O(Nlog‚Å°N) (heap operations)

 ‚Ä¢ Space Complexity: O(N) (for heap storage)



Reflection:

‚úÖ BST Pair Sum: Strengthened understanding of two-pointer and hash-based search techniques in BSTs.

 ‚úÖ Heap Operations: Improved efficiency in combining elements to exceed a threshold.

 ‚úÖ Optimized Search & Sorting: Practiced inorder traversal, hash-based lookups, and heap-based priority operations.



 #BinarySearchTree #BST #TwoPointers #HashSet #MinHeap #PriorityQueue #GreedyAlgorithm #CodingChallenge
