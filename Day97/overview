#Day 217 Problem-Solving #GFG potd and #leetcode

Problem 1: Construct Tree from Inorder & Preorder Traversals

Problem Description:

Given two arrays representing the inorder and preorder traversals of a binary tree, construct the binary tree.

Return the root node of the constructed tree.

The output should be printed in postorder traversal.



Approach:

1) Understanding Traversals:

â€¢ Preorder (Root â†’ Left â†’ Right): The first element in preorder is always the root.

â€¢ Inorder (Left â†’ Root â†’ Right): The root's position splits the inorder array into left and right subtrees.



2) Recursive Construction:

â€¢ Identify the root from preorder.

â€¢ Find the rootâ€™s index in inorder.

â€¢ Recursively construct the left and right subtrees.

â€¢ Base Case: If the range of indices is invalid, return NULL.



Complexity Analysis:

â€¢ Time Complexity: O(n) (each node is processed once).

â€¢ Space Complexity: O(n) (recursion stack in the worst case).



Problem 2: Tuple with Same Product

Problem Description:

Given an array of distinct positive integers, return the number of tuples (a, b, c, d) such that: aÃ—b=cÃ—d.

Where a,b,c,d are all distinct elements in the array.



Approach:

1) Brute Force (Inefficient for Large Inputs):

â€¢ Iterate over all pairs (a,b) and (c,d) and check if their product is the same.

â€¢ Time Complexity: O(n4) (not optimal).



2) Optimized Approach (Using HashMap):

â€¢ Use a hashmap (dictionary) to store the product as a key and the list of pairs that produce that product.

â€¢ Iterate over all pairs (i, j) and store their product in the map.

â€¢ If the product is already present, count valid tuples using combinations.

â€¢ Time Complexity: O(n2), which is much better.



3) Tuple Counting:

â€¢ If a product appears k times, the number of valid tuples is kÃ—(kâˆ’1)Ã—4 (due to 4 possible arrangements of (a,b,c,d).



Reflection:

1) Constructing a Tree from Traversals:

â€¢ Strengthened recursion and tree-building skills.

â€¢ Understood how preorder and inorder traversals help reconstruct a unique tree.



2) Tuple with Same Product:

â€¢ Practiced hashing for quick lookup.

â€¢ Learned an efficient way to count valid product pairs.

#BinaryTree #Recursion #Hashing #Combinations #TreeConstruction ðŸš€

