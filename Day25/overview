Today was a mix of simple optimization and a slightly tricky matrix manipulation problem. Hereâ€™s what I tackled:



ðŸ”¹ Problem 1: Stock Buy and Sell â€“ Max One Transaction Allowed

Problem Statement:

Given an array prices[] representing stock prices on different days, find the maximum profit possible with at most one transaction (1 buy + 1 sell). If no profit is possible, return 0.



Approach:

1) Track Minimum Price:

â€¢  Traverse the array while keeping track of the minimum stock price seen so far.

2) Calculate Profit:

â€¢ For each day, calculate the potential profit by subtracting the minimum price from the current price.

â€¢ Update the maximum profit if the calculated profit exceeds the current maximum.

3) Edge Case:

â€¢ If prices are non-increasing, return 0 as no profit is possible.

4) Challenges Faced:

â€¢ Ensuring that the buy operation always precedes the sell.



Key Takeaway: 

â€¢ Efficient tracking of minimum prices during traversal simplifies profit calculation for single transactions.



ðŸ”¹ Problem 2: Flip Columns for Maximum Number of Equal Rows

Problem Statement:

Given an mÃ—n

mÃ—n binary matrix, flip any number of columns to maximize the number of rows with all equal values (all 0s or all 1s). Return the maximum number of such rows.



Approach:

1) Pattern Identification:

â€¢ Rows that are identical or complementary (e.g., [0,1,1] and [1,0,0]) can be made equal by flipping the corresponding columns.

â€¢ Represent each row as a pattern, and normalize it to a "base form" by considering its complementary representation.

2) Hashing for Row Count:

â€¢ Use a hash map to count the frequency of each normalized row pattern.

â€¢ The row pattern with the maximum count determines the answer.

3) Optimization:

â€¢ Normalize rows instead of flipping columns directly to improve time complexity.

4) Challenges Faced:

â€¢ Deriving the normalization step for complementary rows.



Key Takeaway: 

â€¢ Problems involving flipping often boil down to identifying equivalent patterns. Hash maps are a powerful tool for counting such patterns efficiently.



ðŸŽ¯ What I Learned Today:

â€¢ In profit calculation problems, focus on minimizing auxiliary space and maximizing traversal efficiency.

â€¢ For matrix problems, understanding equivalency relationships (rows, columns, etc.) can drastically simplify the solution.



ðŸ’¡ Reflection: 

â€¢ Every problem teaches a new perspective, whether it's tracking patterns or optimizing traversal. The key is breaking problems into digestible pieces.

#ArrayManipulation | #MatrixProblems | #ProblemSolving | #CodingJourney | #DSA #gfg160  #geekstreak2024
