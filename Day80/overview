#Day 200 Problem-Solving with #GFG POTD and #Leetcode

Today, I worked on two challenging problems, one involving linked list rotation and the other dealing with water trapping in a 2D elevation map. Here's a detailed breakdown of the problems and solutions:



Problem 1: Rotate a Linked List

Problem Description:

Given the head of a singly linked list, rotate the list to the left by k positions.



Approach:

1) Calculate the Length:

‚Ä¢ Traverse the list to determine its length, nnn.



2) Normalize Rotations:

‚Ä¢ Since rotating by nnn results in the same list, reduce k modulo n (k=k%n).



3) Find the Rotation Point:

‚Ä¢ Traverse the list to the (n‚àík)th node and update the links accordingly.



4) Adjust Pointers:

‚Ä¢ Make the (n‚àík)th node the new head and link the last node to the old head to form a rotated list.



Complexity:

‚Ä¢ Time: O(n), where n is the number of nodes in the list.

‚Ä¢ Space: O(1), in-place rotation.



Problem 2: Trapping Rain Water II

Problem Description:

Given a 2D elevation map represented by an m√ónm \times nm√ón height matrix, calculate the total volume of water trapped after raining.



Approach:

1) Priority Queue (Min-Heap):

‚Ä¢ Store the boundary cells in a min-heap.



2) Iterative Flooding:

‚Ä¢ Pop the smallest height from the heap, and for each neighboring cell:

‚Ä¢ Calculate the trapped water (max(0,height of current cell‚àíheight of neighbor)).

‚Ä¢ Update the neighbor's height and push it into the heap if it's lower than the boundary.



3) Boundary Update:

‚Ä¢ Ensure all updates propagate inward to calculate the trapped water accurately.



Complexity:

‚Ä¢ Time: O(m√ónlog‚Å°(m√ón)), for heap operations.

‚Ä¢ Space: O(m√ón), for the heap and visited matrix.



Reflection:

1) Rotate a Linked List:

‚Ä¢ Understanding the structure of the list and the effective kkk-rotations was critical.



2) Trapping Rain Water II:

‚Ä¢ Leveraging a priority queue for efficient boundary updates highlighted the importance of algorithmic optimization for grid-based problems.

#LinkedList #Heap #GridTraversal #TwoPointers #GFG160 #GeekStreak2024 üöÄ

